Traceback (most recent call last):
  File "/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/nbclient/client.py", line 1305, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/jupyter_core/utils/__init__.py", line 166, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/asyncio/base_events.py", line 653, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/nbclient/client.py", line 705, in async_execute
    await self.async_execute_cell(
  File "/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/nbclient/client.py", line 1058, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/nbclient/client.py", line 914, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# this code cell is just used to display a widget
# for us to configure some settings that other cells
# in this notebook rely on
apiKeyInput.value = obfuscateKey(OPENAI_API_KEY)
sampleSizeSlider.value = STORY_SAMPLE_SIZE
temperatureSlider.value = TEMPERATURE

def updateApiKey(event):
  global OPENAI_API_KEY
  OPENAI_API_KEY = apiKeyInput.value
  apiKeyInput.value = obfuscateKey(OPENAI_API_KEY)

def updateSampleSize(change):
  global STORY_SAMPLE_SIZE
  STORY_SAMPLE_SIZE = change['new']

def updateTemperature(change):
  global TEMPERATURE
  TEMPERATURE = change['new']

temperatureSlider.observe(updateTemperature, names='value')
sampleSizeSlider.observe(updateSampleSize, names='value')
apiKeyUpdateButton.on_click(updateApiKey)

apiKeyConfigWidget = pywidgets.HBox([apiKeyInput, apiKeyUpdateButton])
openAiConfigWidget = pywidgets.VBox([openAiHeader, apiKeyConfigWidget, modelDropdown, temperatureSlider])
hackerNewsConfigWidget = pywidgets.VBox([hackerNewsHeader, sampleSizeSlider, sampleSizeWarningLabel])
configWidget = pywidgets.VBox([openAiConfigWidget, hackerNewsConfigWidget])

display(configWidget)
------------------


[0;31m---------------------------------------------------------------------------[0m
[0;31mNameError[0m                                 Traceback (most recent call last)
Cell [0;32mIn[4], line 25[0m
[1;32m     22[0m sampleSizeSlider[38;5;241m.[39mobserve(updateSampleSize, names[38;5;241m=[39m[38;5;124m'[39m[38;5;124mvalue[39m[38;5;124m'[39m)
[1;32m     23[0m apiKeyUpdateButton[38;5;241m.[39mon_click(updateApiKey)
[0;32m---> 25[0m apiKeyConfigWidget [38;5;241m=[39m [43mpywidgets[49m[38;5;241m.[39mHBox([apiKeyInput, apiKeyUpdateButton])
[1;32m     26[0m openAiConfigWidget [38;5;241m=[39m pywidgets[38;5;241m.[39mVBox([openAiHeader, apiKeyConfigWidget, modelDropdown, temperatureSlider])
[1;32m     27[0m hackerNewsConfigWidget [38;5;241m=[39m pywidgets[38;5;241m.[39mVBox([hackerNewsHeader, sampleSizeSlider, sampleSizeWarningLabel])

[0;31mNameError[0m: name 'pywidgets' is not defined

